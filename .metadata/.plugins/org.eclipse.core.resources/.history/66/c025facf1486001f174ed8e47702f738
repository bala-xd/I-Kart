package com.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import com.dto.UserDto;
import com.model.User;
import com.service.UserService;

import jakarta.servlet.http.HttpSession;
import jakarta.validation.Valid;

@Controller
public class LoginController {
	@Autowired
	private UserService service;
	
	@RequestMapping("/")
	public String home(HttpSession ses, Model m) {
		User user = (User) ses.getAttribute("user");
		if (user!=null) m.addAttribute("msg", "Welcome, " + user.getUserName()+"!");
		return "index";
	}
	
	@GetMapping("/register")
	public String register(HttpSession ses, Model m) {
		if (ses.getAttribute("user")!=null) return "redirect:/";
		m.addAttribute("userDto", new UserDto());
		return "register";
	}
	
	@PostMapping("/register")
    public String registerUser(@Valid UserDto uDto, BindingResult res, Model m) {
		if (res.hasErrors()) return "register";
        
        String uid = service.createUser(uDto);
        if (uid == null) {
            m.addAttribute("msg", "Invalid data! Try again.");
            return "register";
        }
        
        m.addAttribute("msg", "User with id: " + uid + " has been added!");
        return "index";
    }
	
	@GetMapping("/signin")
	public String login(HttpSession ses, Model m) {
		if (ses.getAttribute("user")!=null) return "redirect:/";
		m.addAttribute("userDto", new UserDto());
		return "login";
	}
	
	@PostMapping("/signin")
	public String loginUser(@Valid UserDto uDto, BindingResult res, Model m, HttpSession ses) {
		//res.getAllErrors().forEach(System.out::println);
		if (res.hasErrors()) return "login";
		User user = service.validateUser(uDto);
		if(user!=null && user.getLoginStatus()==0) {
			service.updateLoginStatus(user);
			ses.setAttribute("user",user);
			m.addAttribute("msg", "Welcome, " + user.getUserName()+"!");
		}
		else {
			if(user !=null) {
				ses.setAttribute("user",user);
				m.addAttribute("msg", user.getUserName() +" has already logged in!");
			}
			else {
				m.addAttribute("msg", "Invalid Username or Password!");
				return "login";
			}
		}
		return "index";	
	}
	
	
	@GetMapping("/profile")
	public String getProfile(Model m, HttpSession ses) {
		User user = (User) ses.getAttribute("user");
		if (user==null) {
			m.addAttribute("msg", "You must login to view the profile page!");
		}
		m.addAttribute("user", user);
		return "profile";
	}
	
	@GetMapping("/signout")
	public String logout(Model m, HttpSession ses) {
		User user = (User) ses.getAttribute("user");
		if (user==null) return "redirect:/";
		
		service.updateLoginStatus(user);
		m.addAttribute("msg", user.getUserName() +" has logged out!");
		ses.removeAttribute("user");
		return "index";
	}
	
	@GetMapping("/error") 
	public String errorPage() {
		return "error";
	}
}
